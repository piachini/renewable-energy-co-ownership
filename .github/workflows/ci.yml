name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: '**/package-lock.json'
    
    - name: Install blockchain dependencies
      working-directory: ./blockchain
      run: npm ci
      
    - name: List installed packages
      working-directory: ./blockchain
      run: npm list
    
    - name: Run blockchain tests with verbose output
      working-directory: ./blockchain
      run: npx hardhat test --verbose
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./blockchain/coverage/lcov.info
        fail_ci_if_error: true

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Install dependencies
      working-directory: ./blockchain
      run: npm ci
    
    - name: Run npm audit
      working-directory: ./blockchain
      run: npm audit || true

  build:
    needs: [test, security]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: '**/package-lock.json'
    
    - name: Install blockchain dependencies
      working-directory: ./blockchain
      run: npm ci
    
    - name: Build contracts
      working-directory: ./blockchain
      run: npx hardhat compile --verbose
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build
        path: |
          blockchain/artifacts 