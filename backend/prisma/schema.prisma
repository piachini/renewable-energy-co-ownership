// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(uuid())
  email         String    @unique
  walletAddress String?   @unique
  kycStatus     String    @default("pending")
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  investments   Investment[]
  profile       UserProfile?
}

model UserProfile {
  id              String   @id @default(uuid())
  userId          String   @unique
  fullName        String?
  countryCode     String?
  phone           String?
  documentType    String?
  documentNumber  String?
  verificationDate DateTime?
  user            User     @relation(fields: [userId], references: [id])
}

model Asset {
  id          String    @id @default(uuid())
  tokenId     BigInt    @unique
  name        String
  locationLat Float?
  locationLon Float?
  capacityKw  Float
  assetType   String?
  status      String    @default("pending")
  createdAt   DateTime  @default(now())
  documents   AssetDocument[]
  investments Investment[]
}

model AssetDocument {
  id           String   @id @default(uuid())
  assetId      String
  documentType String?
  ipfsHash     String?
  uploadedAt   DateTime @default(now())
  asset        Asset    @relation(fields: [assetId], references: [id])
}

model Investment {
  id              String   @id @default(uuid())
  userId          String
  assetId         String
  amountTokens    Decimal
  purchasePrice   Decimal
  transactionHash String?
  investedAt      DateTime @default(now())
  user            User     @relation(fields: [userId], references: [id])
  asset           Asset    @relation(fields: [assetId], references: [id])
}
